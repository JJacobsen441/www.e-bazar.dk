@model www.e_bazar.dk.Models.DTOs.dto_product
@{
    ViewBag.Title = "Opret Vare";
}

@{

    try
    {

        <div class="xhide_phone remove_desk_block ">
            <div class="container">
                <div class="col-xs-12" xstyle="padding-left:0px;">
                    <br />
                    [@Model.booth_dto.name]
                    <h2>Opret Vare</h2>
                    <br />
                    <input type="button" value="Tilbage til stand" class="btn btn-default btn_green myfade" onclick="location.href='@Url.RouteUrl("EditBooth1", new { booth_id = Model.booth_dto.booth_id } )'" />
                    <input type="submit" value="Gem" class="btn btn-default green_bg lightgreen_bdr white adm_button_form_submit" />
                </div>
            </div>
            <hr class="hr_lightgrey" />
            <div class="container">
                <div class="white_bdr darkgrey_bg removeborder-bottom navigation-top navigation-right">
                    &nbsp;
                </div>
                @if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                {
                    <input type="hidden" class="adm_hidden_no_product_dtos" value="@Model.image_dtos.Count" />//måske unødvendig
                }

                @using (Html.BeginRouteForm("CreateProduct2", FormMethod.Post, @Model))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.booth_dto.booth_id)
                    @Html.HiddenFor(model => model.booth_id, new { @class = "adm_hidden_edit_boothid" })
                    @Html.HiddenFor(model => model.sysname)
                    @Html.HiddenFor(model => model.created_on)
                    @Html.HiddenFor(model => model.category_main_id)
                    @*@Html.HiddenFor(model => model.status_delivery)*@
                    @*@Html.HiddenFor(model => model.status_stock)*@

                    /*{
                        string msg = ViewBag.ERROR;
                        if (msg != "")
                        {
                            Html.HiddenFor(m => msg, new { @class = "adm_hidden_error" });
                        }
                    }*/
                    <div class="white_bg darkgrey_bdr" style="overflow:hidden;">
                        @*<div class="col-xs-4 form-horizontal" xstyle="padding-left:0px;">
                    <div class="form-group">
                        <div class="col-xs-12">
                            @{
                                <div>
                                    @Html.LabelFor(model => model.image_dtos, htmlAttributes: new { @class = "control-label" })
                                </div>
                                int i = 0;
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0 && !string.IsNullOrEmpty(Model.image_dtos.FirstOrDefault().name))
                                {
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        <div class="container_overlay">
                                            @{
                                                var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                                <input type="hidden" class="adm_hidden_images_imagename_@i" value="@img.name">
                                                <img class="adm_img_productimage_@i adm_img_productimage" src="@image_path" alt="Sample Image" />
                                                <div class="overlay">
                                                    <a href="#" class="icon" title="User Profile">
                                                        <i class="fa fa-window-close fa-2x" onclick="removeImage(@i);"></i>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                        i++;
                                    }
                                }
                                else
                                {
                                    var image_path = "/_content/images/site/icons/armchair2_bw.png";
                                    <img class="adm_img_collectionimage" src="@image_path" alt="Sample Image" />
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 adm_div_images_thumbnail">
                            @{
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                                {
                                    i = 0;
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        if (img != null)
                                        {
                                            var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                            <a href="#">
                                                <input type="hidden" class="adm_hidden_images_thumbnail_@i" name="adm_hidden_images_thumbnail_@i" value="@img.name">
                                                <img src="@image_path" alt="Sample Image" class="adm_img_images_thumbnail_@i mythumbnail" onclick="setFront(@i);">&nbsp;&nbsp;&nbsp;
                                            </a>
                                        }
                                        i++;
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12">
                            <div class="col-xs-12">
                                Når produktet er blevet oprettet(Gem), vil det være muligt at uploade billeder, samt indtaste andre oplysninger.<br /><br />
                            </div>
                        </div>
                    </div>
                </div>*@
                        <div class="col-xs-4 form-horizontal">
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "adm_input_name form-control adm_control darkgrey_bdr", placeholder = "navn.." } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-6">
                                    &nbsp;
                                </div>
                            </div>
                            @*<div class="form-group">
                        <div class="col-xs-6">
                            @Html.Label("Hovedkategori", htmlAttributes: new { @class = "control-label xcol-xs-2" })
                            @Html.DropDownListFor(model => model.category_main_id, ViewBag.ProductCategoryMain as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>
                    </div>*@
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.LabelFor(model => model.status_condition_selectlist, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.DropDownList("status_condition_select", ViewBag.StatusCondition as SelectList, new { @class = "form-control darkgrey_bdr" })
                                </div>
                                @*<div class="col-xs-6">
                            @Html.LabelFor(model => model.status_stock_selectlist, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                            @Html.DropDownList("status_stock_select", ViewBag.StatusStock as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>*@
                            </div>
                            <div class="form-group">
                                <div class="col-xs-12">
                                    @Html.LabelFor(model => model.no_of_units, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.EditorFor(model => model.no_of_units, new { htmlAttributes = new { @class = "form-control adm_control darkgrey_bdr" } })
                                    @Html.ValidationMessageFor(model => model.no_of_units, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @{
                                        string price = "0";// Model.price == NOP.INGEN_PRIS.ToString() ? NOP.INGEN_PRIS.ToString() : Model.price;
                                        string tag = ",00 kr";// Model.price == NOP.INGEN_PRIS.ToString() ? "" : ", 00 kr";
                                    }
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })<br />
                                    @Html.EditorFor(model => price, new { htmlAttributes = new { @class = "adm_input_price form-control xadm_control darkgrey_bdr" } }),00 kr
                                    @*@Html.Label(tag, htmlAttributes: new { @class = "adm_input_cents" })*@
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="col-xs-6" style="padding-top:25px;">
                            @Html.CheckBox(NOP.INGEN_PRIS.ToString(), Model.price == NOP.INGEN_PRIS.ToString(), new { @class = "adm_checkbox_price_free" }) Ikke oplyst.
                        </div>*@
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>







































        <div class="xhide_phone remove_tab_block ">
            <div class="container">
                <div class="col-xs-12" xstyle="padding-left:0px;">
                    <br />
                    [@Model.booth_dto.name]
                    <h2>Opret Vare</h2>
                    <br />
                    <input type="button" value="Tilbage til stand" class="btn btn-default btn_green myfade" onclick="location.href='@Url.RouteUrl("EditBooth1", new { booth_id = Model.booth_dto.booth_id } )'" />
                    <input type="submit" value="Gem" class="btn btn-default green_bg lightgreen_bdr white adm_button_form_submit" />
                </div>
            </div>
            <hr class="hr_lightgrey" />
            <div class="container">
                <div class="white_bdr darkgrey_bg removeborder-bottom navigation-top navigation-right">
                    &nbsp;
                </div>
                @if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                {
                    <input type="hidden" class="adm_hidden_no_product_dtos" value="@Model.image_dtos.Count" />//måske unødvendig
                }

                @using (Html.BeginRouteForm("CreateProduct", FormMethod.Post, @Model))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.booth_dto.booth_id)
                    @Html.HiddenFor(model => model.booth_id, new { @class = "adm_hidden_edit_boothid" })
                    @Html.HiddenFor(model => model.sysname)
                    @Html.HiddenFor(model => model.created_on)
                    @Html.HiddenFor(model => model.category_main_id)
                    @*@Html.HiddenFor(model => model.status_delivery)*@
                    @*@Html.HiddenFor(model => model.status_stock)*@

                    /*{
                        string msg = ViewBag.ERROR;
                        if (msg != "")
                        {
                            Html.HiddenFor(m => msg, new { @class = "adm_hidden_error" });
                        }
                    }*/
                    <div class="white_bg darkgrey_bdr" style="overflow:hidden;">
                        @*<div class="col-xs-4 form-horizontal" xstyle="padding-left:0px;">
                    <div class="form-group">
                        <div class="col-xs-12">
                            @{
                                <div>
                                    @Html.LabelFor(model => model.image_dtos, htmlAttributes: new { @class = "control-label" })
                                </div>
                                int i = 0;
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0 && !string.IsNullOrEmpty(Model.image_dtos.FirstOrDefault().name))
                                {
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        <div class="container_overlay">
                                            @{
                                                var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                                <input type="hidden" class="adm_hidden_images_imagename_@i" value="@img.name">
                                                <img class="adm_img_productimage_@i adm_img_productimage" src="@image_path" alt="Sample Image" />
                                                <div class="overlay">
                                                    <a href="#" class="icon" title="User Profile">
                                                        <i class="fa fa-window-close fa-2x" onclick="removeImage(@i);"></i>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                        i++;
                                    }
                                }
                                else
                                {
                                    var image_path = "/_content/images/site/icons/armchair2_bw.png";
                                    <img class="adm_img_collectionimage" src="@image_path" alt="Sample Image" />
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 adm_div_images_thumbnail">
                            @{
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                                {
                                    i = 0;
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        if (img != null)
                                        {
                                            var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                            <a href="#">
                                                <input type="hidden" class="adm_hidden_images_thumbnail_@i" name="adm_hidden_images_thumbnail_@i" value="@img.name">
                                                <img src="@image_path" alt="Sample Image" class="adm_img_images_thumbnail_@i mythumbnail" onclick="setFront(@i);">&nbsp;&nbsp;&nbsp;
                                            </a>
                                        }
                                        i++;
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12">
                            <div class="col-xs-12">
                                Når produktet er blevet oprettet(Gem), vil det være muligt at uploade billeder, samt indtaste andre oplysninger.<br /><br />
                            </div>
                        </div>
                    </div>
                </div>*@
                        <div class="col-xs-4 form-horizontal">
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "adm_input_name form-control adm_control darkgrey_bdr", placeholder = "navn.." } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-6">
                                    &nbsp;
                                </div>
                            </div>
                            @*<div class="form-group">
                        <div class="col-xs-6">
                            @Html.Label("Hovedkategori", htmlAttributes: new { @class = "control-label xcol-xs-2" })
                            @Html.DropDownListFor(model => model.category_main_id, ViewBag.ProductCategoryMain as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>
                    </div>*@
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.LabelFor(model => model.status_condition_selectlist, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.DropDownList("status_condition_select", ViewBag.StatusCondition as SelectList, new { @class = "form-control darkgrey_bdr" })
                                </div>
                                @*<div class="col-xs-6">
                            @Html.LabelFor(model => model.status_stock_selectlist, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                            @Html.DropDownList("status_stock_select", ViewBag.StatusStock as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>*@
                            </div>
                            <div class="form-group">
                                <div class="col-xs-12">
                                    @Html.LabelFor(model => model.no_of_units, htmlAttributes: new { @class = "control-label xcol-xs-2" })
                                    @Html.EditorFor(model => model.no_of_units, new { htmlAttributes = new { @class = "form-control adm_control darkgrey_bdr" } })
                                    @Html.ValidationMessageFor(model => model.no_of_units, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @{
                                        string price = "0";// Model.price == NOP.INGEN_PRIS.ToString() ? NOP.INGEN_PRIS.ToString() : Model.price;
                                        string tag = ",00 kr";// Model.price == NOP.INGEN_PRIS.ToString() ? "" : ", 00 kr";
                                    }
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })<br />
                                    @Html.EditorFor(model => price, new { htmlAttributes = new { @class = "adm_input_price form-control xadm_control darkgrey_bdr" } }),00 kr
                                    @*@Html.Label(tag, htmlAttributes: new { @class = "adm_input_cents" })*@
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="col-xs-6" style="padding-top:25px;">
                            @Html.CheckBox(NOP.INGEN_PRIS.ToString(), Model.price == NOP.INGEN_PRIS.ToString(), new { @class = "adm_checkbox_price_free" }) Ikke oplyst.
                        </div>*@
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>






































        <div class="xhide_desk remove_phone_block ">


            <div class="container">
                <div class="col-sm-12" xstyle="padding-left:0px;">
                    <br />
                    [@Model.booth_dto.name]
                    <h2>Opret Vare</h2>
                    <br />
                    <input type="button" value="Tilbage til stand" class="btn btn-default btn_green myfade" onclick="location.href='@Url.RouteUrl("EditBooth1", new { booth_id = Model.booth_dto.booth_id } )'" />
                    <input type="submit" value="Gem" class="btn btn-default green_bg lightgreen_bdr white adm_button_form_submit" />
                </div>
            </div>
            <hr class="hr_lightgrey" />
            <div class="container">
                <div class="white_bdr darkgrey_bg removeborder-bottom navigation-top navigation-right">
                    &nbsp;
                </div>
                @if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                {
                    <input type="hidden" class="adm_hidden_no_product_dtos" value="@Model.image_dtos.Count" />//måske unødvendig
                }

                @using (Html.BeginRouteForm("CreateProduct", FormMethod.Post, @Model))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.booth_dto.booth_id)
                    @Html.HiddenFor(model => model.booth_id, new { @class = "adm_hidden_edit_boothid" })
                    @Html.HiddenFor(model => model.sysname)
                    @Html.HiddenFor(model => model.created_on)
                    @Html.HiddenFor(model => model.category_main_id)
                    @*@Html.HiddenFor(model => model.status_delivery)*@
                    @*@Html.HiddenFor(model => model.status_stock)*@

                    /*{
                        string msg = ViewBag.ERROR;
                        if (msg != "")
                        {
                            Html.HiddenFor(m => msg, new { @class = "adm_hidden_error" });
                        }
                    }*/
                    <div class="white_bg darkgrey_bdr" style="overflow:hidden;">
                        @*<div class="col-sm-4 form-horizontal" xstyle="padding-left:0px;">
                    <div class="form-group">
                        <div class="col-sm-12">
                            @{
                                <div>
                                    @Html.LabelFor(model => model.image_dtos, htmlAttributes: new { @class = "control-label" })
                                </div>
                                int i = 0;
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0 && !string.IsNullOrEmpty(Model.image_dtos.FirstOrDefault().name))
                                {
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        <div class="container_overlay">
                                            @{
                                                var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                                <input type="hidden" class="adm_hidden_images_imagename_@i" value="@img.name">
                                                <img class="adm_img_productimage_@i adm_img_productimage" src="@image_path" alt="Sample Image" />
                                                <div class="overlay">
                                                    <a href="#" class="icon" title="User Profile">
                                                        <i class="fa fa-window-close fa-2x" onclick="removeImage(@i);"></i>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                        i++;
                                    }
                                }
                                else
                                {
                                    var image_path = "/_content/images/site/icons/armchair2_bw.png";
                                    <img class="adm_img_collectionimage" src="@image_path" alt="Sample Image" />
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12 adm_div_images_thumbnail">
                            @{
                                if (Model.image_dtos != null && Model.image_dtos.Count > 0)
                                {
                                    i = 0;
                                    foreach (biz_productimage img in Model.image_dtos)
                                    {
                                        if (img != null)
                                        {
                                            var image_path = "/_content/images/profiles/" + Model.booth_dto.salesman_dto.sysname + "/booths/" + Model.booth_dto.sysname + "/products/" + Model.sysname + "/" + img.name;
                                            <a href="#">
                                                <input type="hidden" class="adm_hidden_images_thumbnail_@i" name="adm_hidden_images_thumbnail_@i" value="@img.name">
                                                <img src="@image_path" alt="Sample Image" class="adm_img_images_thumbnail_@i mythumbnail" onclick="setFront(@i);">&nbsp;&nbsp;&nbsp;
                                            </a>
                                        }
                                        i++;
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="col-sm-12">
                                Når produktet er blevet oprettet(Gem), vil det være muligt at uploade billeder, samt indtaste andre oplysninger.<br /><br />
                            </div>
                        </div>
                    </div>
                </div>*@
                        <div class="col-sm-4 form-horizontal">
                            <div class="form-group">
                                <div class="col-sm-6">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label xcol-sm-2" })
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "adm_input_name form-control adm_control darkgrey_bdr", placeholder = "navn.." } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-6">
                                    &nbsp;
                                </div>
                            </div>
                            @*<div class="form-group">
                        <div class="col-sm-6">
                            @Html.Label("Hovedkategori", htmlAttributes: new { @class = "control-label xcol-sm-2" })
                            @Html.DropDownListFor(model => model.category_main_id, ViewBag.ProductCategoryMain as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>

                    </div>*@
                            <div class="form-group">
                                <div class="col-sm-6">
                                    @Html.LabelFor(model => model.status_condition_selectlist, htmlAttributes: new { @class = "control-label xcol-sm-2" })
                                    @Html.DropDownList("status_condition_select", ViewBag.StatusCondition as SelectList, new { @class = "form-control darkgrey_bdr" })
                                </div>
                                @*<div class="col-sm-6">
                            @Html.LabelFor(model => model.status_stock_selectlist, htmlAttributes: new { @class = "control-label xcol-sm-2" })
                            @Html.DropDownList("status_stock_select", ViewBag.StatusStock as SelectList, new { @class = "form-control darkgrey_bdr" })
                        </div>*@
                            </div>
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.LabelFor(model => model.no_of_units, htmlAttributes: new { @class = "control-label xcol-sm-2" })
                                    @Html.EditorFor(model => model.no_of_units, new { htmlAttributes = new { @class = "form-control adm_control darkgrey_bdr" } })
                                    @Html.ValidationMessageFor(model => model.no_of_units, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-6">
                                    @{
                                        string price = "0";// Model.price == NOP.INGEN_PRIS.ToString() ? NOP.INGEN_PRIS.ToString() : Model.price;
                                        string tag = ",00 kr";// Model.price == NOP.INGEN_PRIS.ToString() ? "" : ", 00 kr";
                                    }
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })<br />
                                    @Html.EditorFor(model => price, new { htmlAttributes = new { @class = "adm_input_price form-control xadm_control darkgrey_bdr" } }),00 kr
                                    @*@Html.Label(tag, htmlAttributes: new { @class = "adm_input_cents" })*@
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="col-sm-6" style="padding-top:25px;">
                            @Html.CheckBox(NOP.INGEN_PRIS.ToString(), Model.price == NOP.INGEN_PRIS.ToString(), new { @class = "adm_checkbox_price_free" }) Ikke oplyst.
                        </div>*@
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
                                        }
                                        catch (Exception e)
                                        {
                                            string s = ErrorHelper.HandleError(ERROR.EDITBOOTH, e);
                                            string subject = "Fejl i front, CreateProduct(MOB)";
                                            string body = s;
                                            AdminHelper.Notification.Run("mail@e-bazar.dk", "mail@e-bazar.dk", "mail@e-bazar.dk", subject, body);
                                        }

}
@{
    string ingenpris = @NOP.INGEN_PRIS.ToString();
    string err_msg = @Html.Raw(ViewBag.JSON_ERRORS).ToString();
    <input type="hidden" id="ingenpris" value="@ingenpris" />
    <input type="hidden" id="err_msg" value="@err_msg" />
}

@section scripts {
    <script>
        window.onunload = function () { };
        var price;
        $(document).ready(function () {
            fix_mobile();
            showErrors();
            setImages();//måske unødvendig
            setFree();//måske unødvendig
            $('.adm_button_form_submit').click(function () {
                $('.z-loading').fadeIn(200);
                $('form').submit();
            });
            $('.adm_submit_create').prop('disabled', true);
            $('.adm_input_name').keyup(function () {
                if ($('.adm_input_name').val() != '')
                    $('.adm_submit_create').prop('disabled', false);
                else
                    $('.adm_submit_create').prop('disabled', true);
            });
            //$('.adm_checkbox_price_free').click(function () {
            //    var input = $('.adm_input_price');
            //    var cents = $('.adm_input_cents');
            //    var check = $('.adm_checkbox_price_free');
            //    if (check.prop('checked')) {
            //        price = input.val();
            //        input.val($('#ingenpris').val());
            //        cents.text('');
            //    }
            //    else {
            //        input.val(price);
            //        cents.text(',00 kr');
            //    }
            //});
            /*$('.adm_input_price').keyup(function () {
                var input = $('.adm_input_price');
                var cents = $('.adm_input_cents');
                var check = $('.adm_checkbox_price_free');
                if (input.val() != '' && input.val() != $('#ingenpris').val()) {
                    check.prop('checked', false);
                    cents.text(',00 kr');
                }
                else {
                    check.prop('checked', true);
                    cents.text('');
                }
            });*/
            /*$('.adm_input_price').focusout(function () {
                var text = $('.adm_input_price').val();
                if (text == '')
                    $('.adm_input_price').val($('#ingenpris').val());
            });*/
            $('.adm_input_price').focusout(function () {
                var text = $('.adm_input_price').val();
                if (text == '')
                    $('.adm_input_price').val('0');
            });
            $('.z-myalert-btn').click(function () {
                $('.z-myalert').fadeOut(200);
                $('.z-loading').fadeOut(200);
            });
        });


        function setImages() {
            var no_thumbnails = $('.adm_hidden_no_product_dtos').val()
            if (no_thumbnails != undefined) {
                for (var i = 0; i < no_thumbnails; i++) {

                    if (i == 0) {
                        $('.adm_img_productimage_' + i).show();
                    }
                    else
                        $('.adm_img_productimage_' + i).hide()
                }
            }
        }
        function setFront(nr) {
            var no_thumbnails = $('.adm_hidden_no_product_dtos').val()
            if (no_thumbnails != undefined) {
                for (var i = 0; i < json.length; i++) {

                    if (i == nr) {
                        $('.adm_img_productimage_' + i).show();
                    }
                    else
                        $('.adm_img_productimage_' + i).hide()
                }
            }
        }
        function setFree() {
            var input = $('.adm_input_price');
            var cents = $('.adm_input_cents');
            var check = $('.adm_checkboc_price_free');
            if (input.val() == 'INGEN_PRIS') {
                check.prop('checked', true);
                cents.text('');
            }
            else {
                check.prop('checked', false);
                cents.text(',00 kr');
            }
        }

    </script>
}